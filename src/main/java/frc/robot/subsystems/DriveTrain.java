// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package frc.robot.subsystems;


import frc.robot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.PWMVictorSPX;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class DriveTrain extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
private PWMVictorSPX leftSpeedController1;
private PWMVictorSPX leftSpeedController2;
private SpeedControllerGroup leftSpeedControllerGroup;
private PWMVictorSPX rightSpeedController1;
private PWMVictorSPX rightSpeedController2;
private SpeedControllerGroup rightSpeedControllerGroup;
private DifferentialDrive differentialDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public DriveTrain() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
leftSpeedController1 = new PWMVictorSPX(0);
addChild("Left Speed Controller 1",leftSpeedController1);
leftSpeedController1.setInverted(false);
        
leftSpeedController2 = new PWMVictorSPX(1);
addChild("Left Speed Controller 2",leftSpeedController2);
leftSpeedController2.setInverted(false);
        
leftSpeedControllerGroup = new SpeedControllerGroup(leftSpeedController1, leftSpeedController2  );
addChild("Left Speed Controller Group",leftSpeedControllerGroup);

        
rightSpeedController1 = new PWMVictorSPX(2);
addChild("Right Speed Controller 1",rightSpeedController1);
rightSpeedController1.setInverted(true);
        
rightSpeedController2 = new PWMVictorSPX(3);
addChild("Right Speed Controller 2",rightSpeedController2);
rightSpeedController2.setInverted(true);
        
rightSpeedControllerGroup = new SpeedControllerGroup(rightSpeedController1, rightSpeedController2  );
addChild("Right Speed Controller Group",rightSpeedControllerGroup);

        
differentialDrive = new DifferentialDrive(leftSpeedControllerGroup, rightSpeedControllerGroup);
addChild("Differential Drive",differentialDrive);
differentialDrive.setSafetyEnabled(true);
differentialDrive.setExpiration(0.1);
differentialDrive.setMaxOutput(1.0);

        

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

